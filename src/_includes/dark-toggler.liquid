<button
  class="dark-toggler"
  aria-label="Toggle color mode"
  title="Toggle color mode"
  data-theme-toggle
>
  <span class="toggler-icon"></span>
</button>

<style>
  .dark-toggler {
    background-color: transparent !important;
    border: none !important;
    padding: 0 !important;
    margin: 0 !important;
    width: 18px !important;
    height: 18px !important;
    display: inline-block !important;
    cursor: pointer !important;
    box-shadow: none !important;
    outline: none !important;
    position: relative !important;
    overflow: visible !important;
    -webkit-appearance: none !important;
    appearance: none !important;
  }
  
  .dark-toggler:hover,
  .dark-toggler:focus,
  .dark-toggler:active {
    background-color: transparent !important;
    box-shadow: none !important;
    outline: none !important;
    border: none !important;
  }
  
  .toggler-icon {
    width: 18px;
    height: 18px;
    position: absolute;
    top: 0;
    left: 0;
    background-color: var(--color-text);
    transition: background-color 0.2s ease-in-out;
    -webkit-mask-size: 18px;
    -webkit-mask-position: center;
    -webkit-mask-repeat: no-repeat;
    mask-size: 18px;
    mask-position: center;
    mask-repeat: no-repeat;
    -webkit-mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' %3E%3Cpath fill-rule='evenodd' d='M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z' clip-rule='evenodd' /%3E%3C/svg%3E");
    mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' %3E%3Cpath fill-rule='evenodd' d='M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z' clip-rule='evenodd' /%3E%3C/svg%3E");
  }
  
  .dark-toggler:hover .toggler-icon {
    background-color: var(--color-primary);
  }
  
  [data-theme="dark"] .toggler-icon {
    -webkit-mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='currentColor' viewBox='0 0 24 24' %3E%3Cpath d='M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z' /%3E%3C/svg%3E");
    mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='currentColor' viewBox='0 0 24 24' %3E%3Cpath d='M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z' /%3E%3C/svg%3E");
    background-color: var(--color-text);
  }
  
  [data-theme="dark"] .dark-toggler:hover .toggler-icon {
    background-color: var(--color-primary);
  }
</style>

<script>
  const localStorageTheme = localStorage.getItem("theme");
  const systemSettingDark = window.matchMedia("(prefers-color-scheme: dark)");
  const systemSettingTheme = systemSettingDark.matches ? "dark" : "light";

  let currentTheme = localStorageTheme ? localStorageTheme : systemSettingTheme;

  const buttonToggler = document.querySelector("[data-theme-toggle]");
  const html = document.querySelector("html");

  html.setAttribute("data-theme", currentTheme);

  // Set theme color for iOS Safari
  function updateThemeColorMetaTags(theme) {
    // Get the theme-color meta tag
    const themeColorTag = document.querySelector('meta[name="theme-color"]');
    
    // Set the color based on the current theme
    if (theme === 'dark') {
      themeColorTag.setAttribute('content', '#0d0d0d');
    } else {
      themeColorTag.setAttribute('content', '#f5efd7');
    }
  }

  // Apply theme color on page load
  updateThemeColorMetaTags(currentTheme);

  setTimeout(() => {
    document.querySelector("body").style.transition =
      "background-color 1s ease-out, color 1s ease-out";
  }, 0);

  buttonToggler.addEventListener("click", () => {
    const newTheme = currentTheme === "dark" ? "light" : "dark";
    html.setAttribute("data-theme", newTheme);
    localStorage.setItem("theme", newTheme);
    currentTheme = newTheme;
    
    // Update theme color meta tags when theme changes
    updateThemeColorMetaTags(newTheme);
    
    // Dispatch custom event for theme change
    document.dispatchEvent(new CustomEvent('themeChanged', { 
      detail: { theme: newTheme } 
    }));
  });
</script>
